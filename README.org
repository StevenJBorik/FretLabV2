
* Introduction
webKeyFinder is a browser application for musical key detection. webKeyFinder works with an audio stream or audio files.
 
** Audio Stream / Live Detection
Using an AudioWorkletProcessor, incoming audio stream is recorded in pulse-code modulation format. Once roughly one second of audio is recorded, the chuck is sent to a web worker running the key finder WebAssembly module. Message passing and analysis repeats until key detection is ended.

** Audio File / File Analysis
To prepare for analysis, audio files are first decoded into pulse-code modulation format. Once decoding is done, one second chunks are sent to the web worker running the key finder WebAssembly module. Message passing and analysis repeats until whole audio file is exhausted.

In contrast to live analysis, key detection workload for audio files can be processed in parallel. Once decoding is completed on the main thread, each audio file in the queue works with a dedicated web worker.

* Installation

** Prerequisites
*** emscripten
- [[https://emscripten.org/docs/getting_started/downloads.html#installation-instructions-using-the-emsdk-recommended][installation instructions using emsdk]]
- make sure emsdk is available on your path
#+BEGIN_SRC sh
source ./<emsdk-directory>/emsdk.env.sh
#+END_SRC

*** curl
#+BEGIN_SRC sh
sudo apt-get update
sudo apt-get install curl
#+END_SRC

*** yarn
- [[https://classic.yarnpkg.com/en/docs/install][yarn installation]]

** Clone the repository
#+BEGIN_SRC sh
git clone git@github.com:dogayuksel/webKeyFinder.git
cd webKeyFinder
#+END_SRC

** Install dependencies and build the project
Following command will fetch [[https://github.com/FFTW/fftw3][FFTW3]] and [[https://github.com/mixxxdj/libKeyFinder][libKeyFinder]] and build them using emscripten. Afterwards, will build the project itself using the dependencies.
#+BEGIN_SRC sh
make
#+END_SRC

** (ALTERNATIVE) Run using the pre-compiled wasm module
You can run the project only by bundling the web modules and using the existing pre-compiled wasm modules.
#+BEGIN_SRC sh
make build-web
#+END_SRC

** Run the server
#+BEGIN_SRC sh
make serve
#+END_SRC

** Clean Dependencies
If you want to install dependencies from scratch again, you can clean them with the following command.
#+BEGIN_SRC sh
make clean_deps
#+END_SRC

** Development
- Just kill the server and run `make` again. This should rebuild the changed parts. Then you can run `make serve` to see your changes.
- If you have troubles with make recognizing the changes, you can run `make clean` to delete built files and repeat the previous step.

* Acknowledgments 
This project is possible thanks to the [[https://emscripten.org/][emscripten]] library which allowed me to compile, [[https://github.com/mixxxdj/libkeyfinder][libKeyFinder]]  (originally written by Ibrahim Sha'ath) and its dependency [[http://fftw.org/][FFTW]] for the browser.
